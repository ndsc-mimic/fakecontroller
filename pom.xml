<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.ndsc.mnos</groupId>
  <artifactId>fakecontroller</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>fakecontroller</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <jdk.version>1.8</jdk.version>
    <proj.mainclass>org.ndsc.mnos.App</proj.mainclass>
    <netip.version>1.1.0-SNAPSHOT</netip.version>
    <onos.version>1.10.2</onos.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>org.onosproject</groupId>
      <artifactId>onos-api</artifactId>
      <version>${onos.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.onosproject/openflowj -->
    <dependency>
      <groupId>org.onosproject</groupId>
      <artifactId>openflowj</artifactId>
      <version>0.9.9.onos</version>
    </dependency>

    <dependency>
      <groupId>org.zeromq</groupId>
      <artifactId>jeromq</artifactId>
      <version>0.3.4</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.javatuples</groupId>
      <artifactId>javatuples</artifactId>
      <version>1.2</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>eu.netide.lib</groupId>
      <artifactId>netip</artifactId>
      <version>${netip.version}</version>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.onosproject</groupId>
      <artifactId>onos-protocols-openflow-ctl</artifactId>
      <version>${onos.version}</version>
    </dependency>

    <dependency>
      <groupId>org.onosproject</groupId>
      <artifactId>onos-protocols-openflow-api</artifactId>
      <version>${onos.version}</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/io.netty/netty-all -->
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-all</artifactId>
      <version>4.1.12.Final</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.slf4j/slf4j-api -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>1.7.25</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-core -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>1.2.3</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-access -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-access</artifactId>
      <version>1.2.3</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.3</version>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>

    <!--<scriptSourceDirectory>src/main/scripts</scriptSourceDirectory>-->
    <resources>
      <!-- 控制资源文件的拷贝 -->
      <resource>
        <directory>src/main/resources</directory>
        <targetPath>${project.build.directory}/classes</targetPath>
      </resource>
    </resources>
    <plugins>
      <!-- 设置源文件编码方式 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${jdk.version}</source>
          <target>${jdk.version}</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <!-- The configuration of maven-jar-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.4</version>
        <!-- The configuration of the plugin -->
        <configuration>
          <!-- Configuration of the archiver -->
          <archive>

            <!--
                生成的jar中，不要包含pom.xml和pom.properties这两个文件
            -->
            <addMavenDescriptor>false</addMavenDescriptor>

            <!-- Manifest specific configuration -->
            <manifest>
              <!--
                  是否要把第三方jar放到manifest的classpath中
              -->
              <addClasspath>true</addClasspath>
              <!--
                 生成的manifest中classpath的前缀，因为要把第三方jar放到lib目录下，所以classpath的前缀是lib/
             -->
              <classpathPrefix>lib/</classpathPrefix>
              <!--
                  应用的main class
              -->
              <mainClass>${proj.mainclass}</mainClass>
            </manifest>
          </archive>
          <!--
              过滤掉不希望包含在jar中的文件
          -->
          <!--<excludes>-->
          <!--<exclude>${project.basedir}/xml/*</exclude>-->
          <!--</excludes>-->
        </configuration>
      </plugin>

      <!-- The configuration of maven-assembly-plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.4</version>
        <!-- The configuration of the plugin -->
        <configuration>
          <!-- Specifies the configuration file of the assembly plugin -->
          <descriptors>
            <descriptor>src/main/assembly/package.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
